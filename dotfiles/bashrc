# Environment
export PATH=$HOME/bin:$PATH
export EDITOR=vim

# fix color escape sequences showing up in less.
export LESS=-eiMXR

# If set, bash checks the window size after each command and, if necessary,
# updates the values of LINES and COLUMNS.
shopt -s checkwinsize

display_venv() {
    if [ ! -z $VIRTUAL_ENV ]; then
        venv=$(basename $VIRTUAL_ENV)
        python_version=$(basename $(dirname $VIRTUAL_ENV))
        echo "$python_version($venv)"
    fi
}

display_git_branch() {
    if git show-ref --quiet 2> /dev/null; then
        local BRANCH=$(git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/^\*\ //')
        if [ -n "${BRANCH}" ]; then
            echo "(${BRANCH})"
        fi
    fi
}

git_ps1() {
    local red=$(tput setaf 1)
    local green=$(tput setaf 2)
    local cyan=$(tput setaf 6)
    local blue=$(tput setaf 4)
    local clr=$(tput sgr0)

    export PS1="$clr
\d \@ $green\u${clr}@$cyan\h$clr:$PWD $red$(display_venv)$clr
$(display_git_branch)$ "
}

export PROMPT_COMMAND="git_ps1"

# make command line behave more like vi
set -o vi

# History
HISTCONTROL=ignoredups:ignorespace
HISTSIZE=10000
HISTFILESIZE=100000
shopt -s histappend
bind '"\e[B": history-search-forward'
bind '"\e[A": history-search-backward'

# source alias file
if [ -f $HOME/.bash_aliases ]; then
    source $HOME/.bash_aliases
fi

export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"

if command -v pyenv 1>/dev/null 2>&1; then
  eval "$(pyenv init -)"
fi

export PATH=/usr/local/cuda-10.0/bin${PATH:+:${PATH}}
export LD_LIBRARY_PATH=/usr/local/cuda-10.0/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}

# Add default node to path
export PATH=~/.nvm/versions/node/v12.18.4/bin:$PATH
# Load NVM
export NVM_DIR="$HOME/.nvm"
[[ -s "$NVM_DIR/nvm.sh" ]] && source "$NVM_DIR/nvm.sh" --no-use
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
