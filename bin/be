#! /bin/bash

BUILD=$1

genome model build view --inputs --notes $BUILD

TMPFILE=$(tempfile)
# find all the .err files
exec 200>/tmp/tmux-capture-lock
flock -x -w 10 200
tmux capture-pane -S -32678 -t $TMUX_PANE
tmux show-buffer | perl -e 'for my $line (reverse <>) {if ($line =~ /^crashed.*\s([^\s]+)$/) { my $file = $1; chomp($file); print $file . "\n"; } if ($line =~ /=== Workflow ===/) {exit(0);}}' > $TMPFILE
MODEL=$(tmux show-buffer | perl -e 'for my $line (reverse <>) {if ($line =~ /^Model ID:\s([^\s]+)\s/) { my $model = $1; chomp($model); print $model . "\n"; exit(0); } }')
flock -u 200

# open all the files found in vim using the quickfix buffer
NEW_PANE=$(tmux split-window -dP -t $TMUX_PANE 'bash')
tmux send-keys -t $NEW_PANE "vim -R && rm -f $TMPFILE" "C-m"
tmux send-keys -t $NEW_PANE ':set errorformat=%f' "C-m"
tmux send-keys -t $NEW_PANE ":cfile $TMPFILE" "C-m"

# name the window MMM-BBB the last 3 characters of the model_id and build_id
string_end ()
{
    STRING=$1
    LEN=$2
    echo ${STRING:(${#STRING}-$LEN):$LEN}
}
SHORT_BUILD=$(string_end $BUILD 3)
SHORT_MODEL=$(string_end $MODEL 3)
tmux rename-window -t $TMUX_PANE "$SHORT_MODEL-$SHORT_BUILD"
