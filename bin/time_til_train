#! /usr/bin/python

import datetime
import bisect

train_times_am = [4,2,4,28,4,48,5,1,5,16,5,36,5,50,5,56,6,10,6,15,6,26,
        6,38,6,50,7,2,7,14,7,26,7,38,7,50,8,2,8,14,
        8,26,8,38,8,50,9,2,9,20,9,44,10,4,10,24,10,44,
        11,4,11,24,11,44,12,4,12,24,12,44]
train_times_pm = [1,4,1,24,1,44,2,4,2,24,2,43,2,57,3,13,3,22,3,27,3,38,3,50,
        4,2,4,14,4,26,4,38,4,50,5,2,5,14,5,26,5,38,5,50,6,2,6,14,
        6,26,6,39,7,4,7,24,7,44,8,4,8,24,8,44,9,4,9,24,9,44,10,4,
        10,24,10,44,11,4,11,23,11,43,12,4,12,24,12,44
        ]

def to_seconds(hours, minutes, pm=False):
    if pm:
        hours = hours+12
    return minutes*60+hours*3600

train_times = []
while train_times_am:
    minute = train_times_am.pop()
    hour = train_times_am.pop()
    train_times.append(to_seconds(hour, minute))

while train_times_pm:
    minute = train_times_pm.pop()
    hour = train_times_pm.pop()
    train_times.append(to_seconds(hour, minute, pm=True))
train_times.sort()

def now_in_seconds():
    now = datetime.datetime.now()
    hours = now.hour
    minutes = now.minute
    seconds = now.second
    return seconds + to_seconds(hours, minutes)

def time_til_train(now_seconds):
    insertion_index = bisect.bisect_left(train_times, now_seconds)
    try:
        next_train = train_times[insertion_index]
    except IndexError:
        # no more trains today!
        return (-1,0)

    try:
        train_after = train_times[insertion_index+1]
        minutes_til_one_after = (train_after-next_train)/60
    except IndexError:
        train_after = -1


    time_til = next_train - now_seconds
    minutes = int(time_til/60)
    seconds = time_til - minutes*60
    return minutes, seconds, minutes_til_one_after

# TESTS
assert time_til_train(to_seconds(4,53))==(8,0,15)
assert time_til_train(to_seconds(9,13))==(7,0,24)
assert time_til_train(to_seconds(6,23, pm=True))==(3,0,13)
assert time_til_train(to_seconds(7,1, pm=True))==(3,0,20)


if __name__ == '__main__':
    print "%d:%02d+%02d" % time_til_train(now_in_seconds())

